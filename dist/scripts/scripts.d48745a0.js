"use strict";angular.module("projectPlannerApp",["ngAnimate","ngCookies","ngMessages","ngResource","ngRoute","ngSanitize","gantt","gantt.tree","gantt.table","gantt.progress","gantt.tooltips"]).config(["$routeProvider","$locationProvider",function(a,b){b.hashPrefix(""),a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"vm"}).when("/settings",{templateUrl:"views/settings.html",controller:"MainCtrl",controllerAs:"vm"}).otherwise({redirectTo:"/"})}]).constant("BACKEND_SERVICE","GOOGLE_SHEET");var init=function(){window.initGapi()};angular.module("projectPlannerApp").controller("MainCtrl",["milestones",function(a){function b(){a.AddItem(d.milestone),d.milestone={tasks:[]}}function c(){d.data=a.LoadList(),d.data=d.data.filter(function(a){var b=!1,c=a.tasks;return c.forEach(function(a){b=a.from>=d.fromDate&&a.from<=d.toDate||a.to>=d.fromDate&&a.to<=d.toDate}),b})}var d=this;d.fromDate=new Date,d.toDate=new Date,d.toDate.setDate(d.fromDate.getDate()+60),d.milestone={tasks:[]},d.addMilestone=b,d.reload=c,c()}]),angular.module("projectPlannerApp").directive("planner",function(){return{templateUrl:"views/planner.directive.html",scope:{data:"=",fromDate:"=",toDate:"="},restrict:"E",controller:function(){var a=this;a.today=new Date,a.outOfRange="truncate",a.headers=["month","week","day"],a.timeFrames={day:{start:moment("9:00","HH:mm"),end:moment("18:00","HH:mm"),working:!0,"default":!0},noon:{start:moment("12:00","HH:mm"),end:moment("13:00","HH:mm"),magnet:!1,working:!1,"default":!0},closed:{magnet:!1,working:!1}},a.dateFrames={weekend:{evaluator:function(a){return 5===a.isoWeekday()||6===a.isoWeekday()},targets:["closed"]}}},controllerAs:"vm"}}),angular.module("projectPlannerApp").service("milestones",["$window","$rootScope","$http","BACKEND_SERVICE","googlesheet","localstore",function(a,b,c,d,e,f){var g=f;"GOOGLE_SHEET"===d&&e.getUrl()&&(g=e);var h={list:[],SaveList:function(){g.saveList()},LoadList:function(){return g.loadList()},AddItem:function(a){g.addItem(a)}};return h}]),angular.module("projectPlannerApp").directive("milestone",function(){return{templateUrl:"views/milestone.directive.html",scope:{milestone:"=",save:"&"},restrict:"E"}}),angular.module("projectPlannerApp").directive("task",function(){return{templateUrl:"views/task.directive.html",restrict:"E",scope:{tasks:"="},controller:["$scope",function(a){function b(){void 0===a.tasks&&(a.tasks=[]),a.tasks.push({name:a.task.name,color:a.task.color,from:a.task.from,to:a.task.to}),a.task={}}a.task={},a.addTask=b}]}}),angular.module("projectPlannerApp").service("googlesheet",["$window","$http","$rootScope",function(a,b,c){a.initGapi=function(){var b=a.localStorage.getItem("googleClientId"),d=["https://sheets.googleapis.com/$discovery/rest?version=v4"],e="https://www.googleapis.com/auth/spreadsheets.readonly";gapi.load("client:auth2",function(){function a(a){a?(c.gapiInitiated=!0,console.log("signed in")):gapi.auth2.getAuthInstance().signIn()}gapi.client.init({discoveryDocs:d,clientId:b,scope:e}).then(function(b){gapi.auth2.getAuthInstance().isSignedIn.listen(a),a(gapi.auth2.getAuthInstance().isSignedIn.get())})})};var d={list:[],saveList:function(){console.log("not implemented yet")},loadList:function(){return d.getUrl()&&c.gapiInitiated&&(console.log("loading document ",d.getUrl()),gapi.client.sheets.spreadsheets.get({spreadsheetId:a.localStorage.getItem("googleSheetId")}).then(function(b){var c=b.result.sheets.map(function(a){return a.properties.title});gapi.client.sheets.spreadsheets.values.batchGet({spreadsheetId:a.localStorage.getItem("googleSheetId"),ranges:c}).then(function(a){d.list=d.parseGoogleSheetV4(JSON.parse(a.body))})})),d.list},parseGoogleSheetV4:function(a){var b=[];return a.valueRanges.forEach(function(a){var c=a.values.splice(1);c.forEach(function(a){var c={name:a[0]&&a[0],parent:a[6]&&a[6],tasks:[]};c.tasks.push({name:a[0]&&a[0],color:a[1]&&a[1],from:new Date(a[2]&&a[2]),to:new Date(a[3]&&a[3]),progress:a[5]&&a[5]}),b.push(c)})}),b},addItem:function(a){console.log("not implemented yet")},getUrl:function(){return a.localStorage?a.localStorage.getItem("googleSheetId"):void 0},getClientId:function(){return a.localStorage?a.localStorage.getItem("googleClientId"):void 0},saveSetting:function(b,c){a.localStorage&&(a.localStorage.setItem("googleClientId",b),a.localStorage.setItem("googleSheetId",c))}};return d}]),angular.module("projectPlannerApp").directive("googlesheet",function(){return{templateUrl:"views/googlesheet.directive.html",restrict:"E",controller:["googlesheet",function(a){function b(){console.log("saving document url",c.sheetUrl),a.saveSetting(c.clientId,c.sheetUrl)}var c=this;c.sheetUrl=a.getUrl(),c.clientId=a.getClientId(),c.saveUrl=b}],controllerAs:"vm"}}),angular.module("projectPlannerApp").service("localstore",["$window",function(a){var b={list:[],saveList:function(){a.localStorage&&a.localStorage.setItem("milestones",angular.toJson(b.list))},loadList:function(){return a.localStorage&&(b.list=angular.fromJson(a.localStorage.getItem("milestones"))),null==b.list&&(b.list=[]),b.list},addItem:function(a){b.list.push(a),b.saveList()}};return b}]),angular.module("projectPlannerApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/googlesheet.directive.html",'<form> <h2>Google Sheet Settings</h2> <div class="form-group"> <div class="input-group"> <label for="clientID" class="input-group-addon">Client ID</label> <input id="clientID" type="text" class="form-control" ng-model="vm.clientId"> </div> </div> <div class="form-group"> <div class="input-group"> <label class="input-group-addon">Sheet ID</label> <input type="text" ng-model="vm.sheetUrl" class="form-control"> </div> </div> <button class="btn btn-primary" ng-click="vm.saveUrl()">Save Url</button> </form>'),a.put("views/main.html",'<form class="form-inline"> <div class="form-group"> <div class="input-group"> <label for="fromDate" class="input-group-addon">From</label> <input id="fromDate" type="date" ng-model="vm.fromDate" class="form-control" ng-change="vm.reload()"> </div> <div class="input-group"> <label for="toDate" class="input-group-addon">To</label> <input id="toDate" type="date" ng-model="vm.toDate" class="form-control" ng-change="vm.reload()"> </div> <div class="btn-group"> <button type="button" class="btn btn-primary" ng-click="vm.reload()"><span class="glyphicon glyphicon-refresh"></span> Reload</button> </div> </div> </form> <hr> <planner data="vm.data" from-date="vm.fromDate" to-date="vm.toDate"></planner>'),a.put("views/milestone.directive.html",'<h2>Milestone</h2> <form name="milestoneForm" ng-submit="save()"> <div class="form-group"> <div class="input-group"> <div class="input-group-addon"> <label for="milestone">Milestone</label> </div> <input id="milestone" class="form-control" type="text" ng-model="milestone.name" required> </div> </div> <task tasks="milestone.tasks"></task> <button class="btn btn-primary" type="submit" ng-disabled="milestoneForm.$invalid">Submit</button> </form>'),a.put("views/planner.directive.html",'<div gantt data="data" from-date="fromDate" to-date="toDate" time-frames="vm.timeFrames" date-frames="vm.dateFrames" headers="vm.headers" task-out-of-range="vm.outOfRange" current-date-value="vm.today"> <gantt-tooltips></gantt-tooltips> <gantt-progress></gantt-progress> <gantt-tree></gantt-tree> <gantt-progress></gantt-progress> <gantt-bounds></gantt-bounds> </div>'),a.put("views/settings.html",'<div class="well"> <googlesheet></googlesheet> </div>'),a.put("views/task.directive.html",'<ul class="list-group"> <li class="list-group-item" ng-repeat="task in tasks track by $index">{{task.name}}</li> </ul> <div class="form-group"> <div class="input-group"> <div class="input-group-addon"> <label for="name">Name</label> </div> <input id="name" type="text" class="form-control" ng-model="task.name"> </div> </div> <div class="form-group"> <div class="input-group"> <div class="input-group-addon"> <label for="fromDate">From</label> </div> <input id="fromDate" type="date" class="form-control" ng-model="task.from"> </div> </div> <div class="form-group"> <div class="input-group"> <div class="input-group-addon"> <label for="toDate">To</label> </div> <input id="toDate" type="date" class="form-control" ng-model="task.to"> </div> </div> <div class="form-group"> <div class="input-group"> <div class="input-group-addon"> <label for="color">Color</label> </div> <input id="color" type="color" class="form-control" ng-model="task.color"> </div> </div> <button class="btn btn-primary" ng-click="addTask()" type="button">Add Task</button>')}]);